{
  "name": "nextjs-directus-turborepo-template",
  "private": true,
  "workspaces": {
    "packages": [
      "apps/*",
      "packages/*"
    ],
    "catalogs": {
      "build": {
        "typescript": "^5.8.3",
        "rimraf": "^6.0.1",
        "@types/node": "^20",
        "vite": "^7.0.5"
      },
      "dev": {
        "dotenv": "^16.4.5",
        "dotenv-cli": "^7.4.2",
        "dotenv-expand": "^11.0.6",
        "wait-port": "^1.1.0",
        "wait-on": "^8.0.1",
        "concurrently": "^9.2.0",
        "cross-env": "^7.0.3"
      },
      "linting": {
        "eslint": "^9",
        "prettier": "^3.3.3",
        "prettier-plugin-tailwindcss": "^0.6.13"
      },
      "next": {
        "next": "15.4.0",
        "eslint-config-next": "15.4.0",
        "@next/bundle-analyzer": "15.4.0",
        "next-sitemap": "^4.2.3",
        "next-themes": "^0.4.6",
        "nextjs-toploader": "^3.8.16"
      },
      "auth": {
        "better-auth": "^1.3.4"
      },
      "react": {
        "react": "^19.0.0",
        "react-dom": "^19.0.0",
        "@types/react": "^19.0.0",
        "@types/react-dom": "^19.0.3",
        "react-hook-form": "^7.53.0"
      },
      "query": {
        "@tanstack/react-query": "^5.81.5",
        "@tanstack/react-query-devtools": "^5.81.5",
        "@tanstack/eslint-plugin-query": "^5.81.2"
      },
      "styling": {
        "tailwindcss": "^4",
        "@tailwindcss/postcss": "^4",
        "tailwind-merge": "^2.0.0",
        "tailwind-variants": "^0.1.18",
        "tailwindcss-animate": "^1.0.7",
        "postcss": "^8.4.31",
        "clsx": "^2.0.0"
      },
      "testing": {
        "vitest": "^3.2.4",
        "@vitest/ui": "^3.2.4",
        "@vitest/coverage-v8": "^3.2.4",
        "@testing-library/jest-dom": "^6.6.3",
        "@testing-library/react": "^16.1.0",
        "@testing-library/user-event": "^14.5.2",
        "jsdom": "^25.0.1",
        "@vitejs/plugin-react": "^4.7.0"
      },
      "ui": {
        "lucide-react": "^0.525.0",
        "@radix-ui/react-alert-dialog": "^1.1.1",
        "@radix-ui/react-dialog": "^1.1.2",
        "@radix-ui/react-dropdown-menu": "^2.1.2",
        "@radix-ui/react-icons": "^1.3.0",
        "@radix-ui/react-label": "^2.1.0",
        "@radix-ui/react-separator": "^1.1.0",
        "@radix-ui/react-slot": "^1.1.0",
        "framer-motion": "^10.16.4",
        "class-variance-authority": "^0.7.0"
      },
      "utils": {
        "zod": "^4.0.0",
        "@hookform/resolvers": "^3.9.0",
        "query-string": "^9.2.2",
        "zustand": "^5.0.6",
        "lodash.snakecase": "^4.1.1",
        "@types/lodash.snakecase": "^4.1.1",
        "commander": "^14.0.0",
        "picocolors": "^1.0.0",
        "prompts": "^2.4.2",
        "@types/prompts": "^2.4.9"
      },
      "database": {
        "drizzle-orm": "^0.39.3",
        "drizzle-kit": "^0.30.6",
        "drizzle-zod": "^0.5.1",
        "postgres": "^3.4.4",
        "nanoid": "^3.3.11",
        "bcrypt": "^5.1.1",
        "@types/bcrypt": "^5.0.2"
      }
    }
  },
  "scripts": {
    "dev": "docker compose down && docker compose up",
    "dev:api": "bun --bun run dev:api:down && docker compose -f ./docker-compose.api.yml up",
    "dev:web": "bun --bun run dev:web:down && docker compose -f ./docker-compose.web.yml up",
    "dev:api:build": "bun --bun run dev:api:down && docker compose -f ./docker-compose.api.yml up --build",
    "dev:web:build": "bun --bun run dev:web:down && docker compose -f ./docker-compose.web.yml up --build",
    "dev:api:new": "bun --bun run dev:api:down:volumes && docker compose -f ./docker-compose.api.yml up --build",
    "dev:web:new": "bun --bun run dev:web:down:volumes && docker compose -f ./docker-compose.web.yml up --build",
    "dev:api:down": "docker compose -f ./docker-compose.api.yml down",
    "dev:web:down": "docker compose -f ./docker-compose.web.yml down",
    "dev:api:down:volumes": "docker compose -f ./docker-compose.api.yml down --volumes",
    "dev:web:down:volumes": "docker compose -f ./docker-compose.web.yml down --volumes",
    "dev:api:logs": "docker compose -f ./docker-compose.api.yml logs -f",
    "dev:web:logs": "docker compose -f ./docker-compose.web.yml logs -f",
    "dev:api:run": "envcli docker exec -it ${COMPOSE_PROJECT_NAME:-nextjs-directus}-api-dev /bin/sh",
    "dev:web:run": "envcli docker exec -it ${COMPOSE_PROJECT_NAME:-nextjs-directus}-web-dev /bin/sh",
    "dev:local": "turbo dev",
    "build": "turbo build",
    "start": "docker compose -f ./docker-compose.prod.yml down && docker compose -f ./docker-compose.prod.yml up --build",
    "start:local": "turbo start",
    "test": "turbo test",
    "test:watch": "turbo test:watch",
    "test:ui": "vitest --ui",
    "test:coverage": "turbo test:coverage && bun run coverage:merge && bun run coverage:report",
    "coverage:merge": "rimraf coverage && bun --bun scripts/collect-coverage.js && nyc merge coverage/raw coverage/coverage-final.json",
    "coverage:report": "mkdir -p coverage && nyc report --temp-dir coverage --report-dir coverage/report --reporter=html --reporter=text --reporter=lcov && echo \"\\nðŸ“Š Merged coverage report generated at: coverage/report/index.html\"",
    "lint": "turbo lint",
    "format": "turbo prettify",
    "clean": "turbo clean",
    "init": "bun --bun scripts/init.js",
    "add:upstream": "bun --bun scripts/add-upstream.js",
    "rebase:upstream": "bun --bun add:upstream && git fetch upstream && git rebase upstream/main",
    "generate": "turbo generate",
    "generate:directus:types": "turbo run generate:directus:types",
    "docker:dev": "bun --bun run dev",
    "docker:prod": "bun --bun run start",
    "docker:build": "docker compose -f ./docker-compose.prod.yml build",
    "docker:build:web": "docker build -f docker/Dockerfile.web.prod . -t nextjs-directus-web:latest",
    "docker:build:api": "docker build -f docker/Dockerfile.api.prod . -t directus-api:latest",
    "prod": "bun --bun run prod:down && docker compose -f ./docker-compose.prod.yml up --build",
    "prod:new": "bun --bun run prod:down:volumes && docker compose -f ./docker-compose.prod.yml up --build",
    "prod:down": "docker compose -f ./docker-compose.prod.yml down",
    "prod:down:volumes": "docker compose -f ./docker-compose.prod.yml down --volumes",
    "prod:api": "bun --bun run prod:api:down && docker compose -f ./docker-compose.api.prod.yml up",
    "prod:api:build": "bun run prod:api:down && docker compose -f ./docker-compose.api.prod.yml up --build",
    "prod:api:new": "bun --bun run prod:api:down:volumes && docker compose -f ./docker-compose.api.prod.yml up --build",
    "prod:api:down": "docker compose -f ./docker-compose.api.prod.yml down",
    "prod:api:down:volumes": "docker compose -f ./docker-compose.api.prod.yml down --volumes",
    "prod:web": "bun --bun run prod:web:down && docker compose -f ./docker-compose.web.prod.yml up",
    "prod:web:build": "bun --bun run prod:web:down && docker compose -f ./docker-compose.web.prod.yml up --build",
    "prod:web:new": "bun --bun run prod:web:down:volumes && docker compose -f ./docker-compose.web.prod.yml up --build",
    "prod:web:down": "docker compose -f ./docker-compose.web.prod.yml down",
    "prod:web:down:volumes": "docker compose -f ./docker-compose.web.prod.yml down --volumes",
    "prod:logs:api": "docker compose -f ./docker-compose.api.prod.yml logs -f",
    "prod:logs:web": "docker compose -f ./docker-compose.web.prod.yml logs -f",
    "prod:api:run": "envcli docker exec -it ${COMPOSE_PROJECT_NAME:-nextjs-directus}-api-prod /bin/sh",
    "prod:web:run": "envcli docker exec -it ${COMPOSE_PROJECT_NAME:-nextjs-directus}-web-prod /bin/sh",
    "kill:api": "trycli-options --command \"envcli kill-port $:{NEXT_PUBLIC_API_PORT} && envcli wait-on $:{NEXT_PUBLIC_API_URL} -r\" --silent",
    "api": "dotenv -e .env -- bun --bun --cwd=./apps/api run --",
    "web": "dotenv -e .env -- bun --bun --cwd=./apps/web run --",
    "@repo/ui": "dotenv -e .env -- bun --bun --cwd=./packages/ui run --",
    "@repo/types": "dotenv -e .env -- bun --bun --cwd=./packages/types run --",
    "@repo/tsconfig": "dotenv -e .env -- bun --bun --cwd=./packages/tsconfig run --",
    "@repo/tailwind-config": "dotenv -e .env -- bun --bun --cwd=./packages/tailwind-config run --",
    "@repo/eslint-config": "dotenv -e .env -- bun --bun --cwd=./packages/eslint-config run --",
    "@repo/directus-sdk": "dotenv -e .env -- bun --bun --cwd=./packages/directus-sdk run --",
    ".": "dotenv -e .env -- bun --bun --cwd=./ run --",
    "rm:node_modules": "concurrently \"bun --bun x rimraf node_modules\" \"bun --bun x rimraf --glob packages/*/node_modules\" \"bun --bun x rimraf --glob apps/*/node_modules\"",
    " ": " "
  },
  "devDependencies": {
    "@happy-dom/global-registrator": "^18.0.1",
    "@n0safe/envcli": "^1.0.2",
    "@n0safe/rununtil": "^1.0.5",
    "@n0safe/trycli": "^1.0.4",
    "@types/bun": "latest",
    "nyc": "^15.1.0",
    "prompts": "catalog:utils",
    "rimraf": "catalog:build",
    "turbo": "^2.1.2",
    "vitest": "catalog:testing",
    "vite": "catalog:build",
    "concurrently": "catalog:dev"
  },
  "engines": {
    "bun": ">=1.2.14"
  },
  "packageManager": "bun@1.2.14",
  "dependencies": {
    "dotenv": "^16.4.5",
    "dotenv-cli": "^7.4.2",
    "dotenv-expand": "^11.0.6",
    "kill-port-process": "^3.2.1",
    "wait-on": "^8.0.1",
    "wait-port": "^1.1.0"
  },
  "peerDependencies": {
    "typescript": "^5"
  }
}
